- name: Stop Postgres service if exist
  become: true
  ignore_errors: yes
  community.docker.docker_compose:
    project_src: /home/feroz/docker/postgres
    state: absent
    services:
      - postgresql-master
    # stopped: yes
  register: output2
  # when: groups['postgres'][0] == inventory_hostname

- ansible.builtin.debug:
    var: output2

# Only removes if directory exists 
- name: Remove any existing postgres data
  become: true
  file:
    path: /data/postgres
    state: absent

- name: Creates directory
  become: true
  file:
    path: /data/postgres
    state: directory

- name: Change postgres data directory permission
  become: true
  file:
    path: /data/postgres
    owner: "1001"
    group: "1001"

- name: Remove any existing postgres docker directories
  become: true
  file:
    path: /home/feroz/docker
    state: absent

- name: Creates docker directory
  file:
    path: /home/feroz/docker/postgres
    state: directory

- name: Copy cert files
  become: true
  copy:
    src: /home/feroz/docker/postgres/certs
    dest: /home/feroz/docker/postgres/
    owner: '1001'

- name: Set cert key permission
  become: true
  file:
    path: /home/feroz/docker/postgres/certs/postgres.key
    mode: 'og-rwx'

- name: Copy docker-compose file
  copy:
    src: /home/feroz/docker/postgres/docker-compose.yml
    dest: /home/feroz/docker/postgres/docker-compose.yml

- name: Start Master
  become: true
  community.docker.docker_compose:
    project_src: /home/feroz/docker/postgres
    state: present
    build: yes
    services:
      - postgresql-master
    # stopped: yes
  register: output
  when: groups['postgres'][0] == inventory_hostname

- ansible.builtin.debug:
    var: output

- name: Start Replica
  become: true
  community.docker.docker_compose:
    project_src: /home/feroz/docker/postgres
    state: present
    build: yes
    services:
      - postgresql-slave
    # stopped: yes
  register: output3
  when: groups['postgres'][0] != inventory_hostname

- ansible.builtin.debug:
    var: output3