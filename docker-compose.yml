version: '3.8'

services:
  angularjs:
    image: node:20.6-alpine3.17
    container_name: angularjs
    working_dir: /app
    command:
      - /bin/sh
      - -c
      - |
        tail -F /dev/null
    # user: '1000:1000'
    volumes:
      - /app/node_modules
      - ./angularjs:/app
    ports:
      - '4200:4200'
    restart: unless-stopped
  reactjs:
    image: node:20.6-alpine3.17
    container_name: reactjs
    working_dir: /app
    command:
      - /bin/sh
      - -c
      - |
        tail -F /dev/null
    # user: '1000:1000'
    volumes:
      - /app/node_modules
      - ./reactjs:/app
    ports:
      - '3000:3000'
      - '4000:4000'
    restart: unless-stopped

  expressjs:
    image: node:19.0-alpine3.16
    container_name: expressjs
    working_dir: /app
    command:
      - /bin/sh
      - -c
      - |
        tail -F /dev/null
    # user: "1000:1000"
    volumes:
      - /app/node_modules
      - ./expressjs:/app
    ports:
      - '5000:5000'
    restart: unless-stopped
    # setting up environment variables
    environment:
      - NODE_ENV=development
      - pg_master_database=database-name
      - pg_master_user=username
      - pg_master_password=password
      - pg_master_host=ip-address
      - pg_master_port=5432

  jsonserver:
    image: node:17.7.2-alpine3.14
    container_name: jsonserver
    command: sh -c "tail -F /dev/null"
    user: '1000:1000'
    working_dir: /app
    volumes:
      - /app/node_modules
      - ./jsonserver:/app
    ports:
      - '3001:3001'

  django:
    image: python:3.12.0b4-bookworm
    container_name: django
    working_dir: /app
    command:
      - /bin/sh
      - -c
      - |
        tail -F /dev/null
    # user: "1000:1000"
    volumes:
      - ./python:/app
    ports:
      - '8000:8000'
    restart: unless-stopped
    env_file: .env
    environment:
      - DJANGO_DEBUG=True
      - pg_master_database=database-name
      - pg_master_user=username
      - pg_master_password=password
      - pg_master_host=ip-address
      - pg_master_port=5432
