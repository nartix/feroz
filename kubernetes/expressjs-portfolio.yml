apiVersion: apps/v1
kind: Deployment
metadata:
  name: api-expressjs
  labels:
    app: api-expressjs
spec:
  replicas: 3
  selector:
    matchLabels:
      app: api-expressjs
  template:
    metadata:
      labels:
        app: api-expressjs
    spec:
      imagePullSecrets:
        - name: ecr-docker-login-token-from-action
      containers:
        - name: api-expressjs
          image: dkr.ecr.us-east-2.amazonaws.com/portfolio-expressjs:449980103
          imagePullPolicy: Always
          env:
            - name: pg_master_host
              value: MASTER-DB-CLUSTER-ADDRESS-HERE
            - name: pg_master_port
              value: '5432'
            - name: pg_master_user
              value: USERNAME-HERE
            - name: pg_master_password
              value: PASSWORD-HERE
            - name: pg_master_database
              value: DATABASE-NAME-HERE
          ports:
            - name: apiweb
              containerPort: 5000
---
apiVersion: v1
kind: Service
metadata:
  name: api-expressjs-clusterip
spec:
  type: ClusterIP
  ports:
    - targetPort: 5000
      port: 80
  selector:
    app: api-expressjs
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: api-expressjs-ingress
  annotations:
    kubernetes.io/ingress.class: 'nginx'
spec:
  ingressClassName: nginx
  defaultBackend:
    service:
      name: api-expressjs-clusterip
      port:
        number: 80
  tls:
    - hosts:
        - expressjs.ferozfaiz.com
      secretName: ferozfaiz-com-cloudflare-tls
  rules:
    - host: expressjs.ferozfaiz.com
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: api-expressjs-clusterip
                port:
                  number: 80
